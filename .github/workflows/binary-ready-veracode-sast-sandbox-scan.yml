name: Binary Ready - Veracode Static Sandbox Scanner

run-name: Binary Ready - Static Sandbox Scanner - ${{ github.event.client_payload.repository.name }}

concurrency:
  group: ${{ github.event.client_payload.event_type }}-${{ github.event.client_payload.repository.name }}-${{ github.event.client_payload.repository.branch }}
  cancel-in-progress: true

on:
  repository_dispatch:
    types: [binary-ready-veracode-sast-sandbox-scan]

jobs:
  register:
    uses: ./.github/workflows/veracode-check-run.yml
    with:
      check_run_name: ${{ github.workflow }}
      head_sha: ${{ github.event.client_payload.sha }}
      repositroy_owner: ${{ github.event.client_payload.repository.owner }}
      repositroy_name: ${{ github.event.client_payload.repository.name }}
      event_type: ${{ github.event.client_payload.event_type }}
      github_token: ${{ github.event.client_payload.token }}
      run_id: ${{ github.run_id }}
      branch: ${{ github.event.client_payload.repository.branch }}

  validations:
    needs: register
    runs-on: ubuntu-latest
    name: Validations
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 
      - name: Verify Veracode API credentials
        id: verify_api_creds
        uses: ./actions/github-actions-integration-helper
        with:
          action: validateVeracodeApiCreds
          token: ${{ github.event.client_payload.token }}
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          appname: ${{ github.event.client_payload.user_config.profile_name }}
          source_repository: ${{ github.event.client_payload.repository.full_name }}
          check_run_id: ${{ needs.register.outputs.run_id }}

      - name: Checkout repository
        uses: actions/checkout@v4 
      - name: Verify Policy name
        id: verify_policy_name
        if: success()
        uses: ./actions/github-actions-integration-helper
        with:
          action: validatePolicyName
          token: ${{ github.event.client_payload.token }}
          vid: ${{ secrets.VERACODE_API_ID }}
          vkey: ${{ secrets.VERACODE_API_KEY }}
          appname: ${{ github.event.client_payload.user_config.profile_name }}
          source_repository: ${{ github.event.client_payload.repository.full_name }}
          check_run_id: ${{ needs.register.outputs.run_id }}
          policyname: ${{ github.event.client_payload.policy_name }}
          path: ${{ github.event.client_payload.annotationObj.path }}
          start_line: ${{ github.event.client_payload.annotationObj.start_line }}
          end_line: ${{ github.event.client_payload.annotationObj.end_line }}
          break_build_invalid_policy: ${{github.event.client_payload.break_build_invalid_policy }}

  sandbox_scan:
    needs: [register, validations]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        id: download-artifact
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ github.event.client_payload.token }}
          repository: ${{ github.event.client_payload.repository.full_name }}
          run-id: ${{ github.event.client_payload.run_id }}

      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Veracode Upload and Scan Action Step
        id: upload_and_scan
        uses: ./actions/uploadandscan-action
        with:
          appname: ${{ github.event.client_payload.user_config.profile_name }}
          createprofile: true
          policy: ${{ github.event.client_payload.policy_name }}
          version: '${{ github.run_id }}'
          filepath: ${{ github.event.client_payload.repository.artifact_name }}
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          createsandbox: true
          sandboxname: GitHub App Scans-${{ github.event.client_payload.repository.branch }}
          # include: ${{ github.event.client_payload.modules_to_scan }}
          failbuild: ${{ github.event.client_payload.user_config.break_build_policy_findings }}